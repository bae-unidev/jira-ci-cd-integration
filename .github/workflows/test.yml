name: 'build-test'

on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: npm
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Use Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12

      - name: ðŸ“¦ Install dependencies
        run: npm ci

      - name: Checks
        run: |
          npm run lint
          npm run build
          npm run test

      - name: ðŸ”¨ Package Action
        run: npm run package:action

      - name: Test Action - Build
        uses: ./
        if: ${{ always() }}
        env:
          JIRA_DEFAULT_TEST_ISSUE: 'JCI-7'
        with:
          event_type: build
          state: ${{ job.status }}
          jira_instance: boringdownload
          token: ${{ secrets.GITHUB_TOKEN }}
          client_id: ${{ secrets.JIRA_CLIENT_ID }}
          client_secret: ${{ secrets.JIRA_CLIENT_SECRET }}

      - name: Test Action - Deploys
        uses: ./
        if: ${{ always() }}
        env:
          JIRA_DEFAULT_TEST_ISSUE: 'JCI-4'
        with:
          event_type: deployment
          state: ${{ job.status }}
          environment: development
          jira_instance: boringdownload
          token: ${{ secrets.GITHUB_TOKEN }}
          client_id: ${{ secrets.JIRA_CLIENT_ID }}
          client_secret: ${{ secrets.JIRA_CLIENT_SECRET }}
